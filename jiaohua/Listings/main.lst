C51 COMPILER V9.59.0.0   MAIN                                                              11/13/2020 17:06:18 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "STC15F2K60S2.H"
   2          #include "stdio.h"
   3          #include "tim.h"
   4          #include "delay.h"
   5          #include "typedef.h"
   6          #include "hc138.h"
   7          #include "led.h"
   8          #include "seg.h"
   9          #include "iic.h"
  10          #include "boolean.h"
  11          #include "dkey.h"
  12          #include "onewire.h"
  13          #include "beep.h"
  14          
  15          
  16          uint8_t s[9] = "-1- 0120";
  17          
  18          
  19          //记录时间切换档位 默认：120秒（1档）
  20          uint8_t sec_mode = 1;
  21          //可以读取光敏电阻的数值了
  22          uint8_t pr_can_proc = 1;
  23          
  24          uint8_t led_flip_flag;
  25          bool led_flag;
  26          
  27          //模式一里的倒计时计数器
  28          uint16_t sec_count,pr_count,led_flip_count;
  29          uint16_t sec = 120;
  30          
  31          bool en_beep = true;
  32          
  33          void init(){
  34   1        
  35   1        Cls_Peripheral();
  36   1        Timer1Init();
  37   1        //UARTInit();
  38   1        
  39   1        chip_sel(BUFFER);
  40   1        P0 = 0x00;
  41   1        chip_sel(LED_BUS);
  42   1        P0 = 0xFF;
  43   1      
  44   1      }
  45          
  46          /*
  47          void SentByte(uint8_t x)
  48          {
  49            SBUF=x;
  50            while(TI==0);
  51            TI=0;
  52          }
  53          */
  54          
C51 COMPILER V9.59.0.0   MAIN                                                              11/13/2020 17:06:18 PAGE 2   

  55          void mode1(){
  56   1        
  57   1        sec = 120;
  58   1        
  59   1        while(1){
  60   2          sprintf(s, "-1- 0%03d", sec);
  61   2          seg_display(s);
  62   2          
  63   2          if(sec == 0 | s6_is_pressed()){
  64   3          
  65   3            sec = 0;
  66   3            led_flip_flag = 0;
  67   3            set_led1(true);
  68   3          }
  69   2          
  70   2          if(led_flip_flag){
  71   3          
  72   3            led_flip_flag = 0;
  73   3            set_led1(led_flag);
  74   3            
  75   3          }
  76   2          
  77   2          //S4按键被按下，退出函数
  78   2          if(s4_is_pressed()){
  79   3            led_flag = false;
  80   3            seg_clean();
  81   3            set_beep(false);
  82   3            sec = 120;
  83   3            return;
  84   3          }
  85   2          
  86   2          //如果s5按键被按下，调整时间
  87   2          if(s5_is_pressed()){
  88   3      
  89   3            switch(sec_mode){
  90   4              case(0):
  91   4                sec_mode = 1;
  92   4                sec = 120;
  93   4                break;
  94   4              case(1):
  95   4                sec_mode = 2;
  96   4                sec = 240;
  97   4                break;
  98   4              default:
  99   4                sec_mode = 0;
 100   4                sec = 0;
 101   4            }
 102   3      
 103   3          }
 104   2        }
 105   1      
 106   1      }
 107          
 108          void mode2(){
 109   1      
 110   1        uint8_t pr_val;
 111   1        uint16_t temp;
 112   1        while(1){
 113   2          
 114   2          
 115   2          //如果读光敏电阻的标志=1 说明可以刷新数值了(顺便也可以把DS18B20的温度读了)
 116   2          if(pr_can_proc){
C51 COMPILER V9.59.0.0   MAIN                                                              11/13/2020 17:06:18 PAGE 3   

 117   3            pr_can_proc = 0;
 118   3            pr_val = PCF891_Adc();
 119   3            
 120   3            temp = (uint16_t)(rd_temperature()/16.0)+0.5;
 121   3            
 122   3          }
 123   2          
 124   2      
 125   2          
 126   2          sprintf(s, "%03d  %02dC", (uint16_t)pr_val, temp);
 127   2          //sprintf(s, "FFFFFFFF");
 128   2          seg_display(s);
 129   2          if(led_flip_flag){
 130   3          
 131   3            led_flip_flag = 0;
 132   3            
 133   3            
 134   3            if((temp > 25 | pr_val > 200) & en_beep){
 135   4              togg_beep();
 136   4            }else{
 137   4              set_beep(false);
 138   4            }
 139   3            
 140   3            P0 = 0xFF;
 141   3            set_led2(led_flag);
 142   3            
 143   3            
 144   3          }
 145   2          
 146   2          
 147   2          //S4按键被按下，退出函数
 148   2          if(s4_is_pressed()){
 149   3            led_flag = false;
 150   3            seg_clean();
 151   3            set_beep(false);
 152   3            return;
 153   3          }
 154   2          
 155   2          if(s7_is_pressed()){
 156   3            en_beep = false;
 157   3          }
 158   2        }
 159   1        
 160   1        
 161   1      
 162   1      }
 163          
 164          
 165          void main(){
 166   1        
 167   1        init();
 168   1        P0 = 0xFF;
 169   1        
 170   1        led_flow();
 171   1        while(1){
 172   2          
 173   2          mode2();
 174   2          mode1();
 175   2        
 176   2        }
 177   1        
 178   1      }
C51 COMPILER V9.59.0.0   MAIN                                                              11/13/2020 17:06:18 PAGE 4   

 179          
 180          
 181          void timer1_int() interrupt 3{
 182   1        
 183   1        if(++sec_count >= 1000){
 184   2          sec_count = 0;
 185   2          if(sec > 0){
 186   3            sec--;
 187   3          }
 188   2        }
 189   1        
 190   1        if(++pr_count >= 500){
 191   2          pr_count = 0;
 192   2          pr_can_proc = 1;
 193   2        }
 194   1        
 195   1        if(++led_flip_count >= 500){
 196   2          led_flag = !led_flag;
 197   2          led_flip_count = 0;
 198   2          if(sec == 0) return;
 199   2          led_flip_flag = 1;
 200   2          
 201   2        }
 202   1      
 203   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    513    ----
   CONSTANT SIZE    =     22    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
